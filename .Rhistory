points(x = mean(a), y = 0.8, pch = 24, cex = 0.5, col = "dark red")
a <- rnorm(20,85,2)
b <- rep(1,20)
means_simulated[1] <- mean(a)
plot(a, b, cex = .5, col = "pink")
points(x = mean(a), y = 0.8, pch = 24, cex = 0.5, col = "pink")
a=rnorm(20,85,2)
b=rep(1.05,20)
means_simulated[3]=mean(a)
points(a,b,cex = .5)
points(x=mean(a),y=0.8,pch=24,cex=0.5)
a=rnorm(20,85,2)
b=rep(1.075,20)
means_simulated[4]=mean(a)
points(a,b,cex = .5, col = "green")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "green")
a=rnorm(20,85,2)
b=rep(1.1,20)
means_simulated[5]=mean(a)
points(a,b,cex = .5, col = "purple")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "purple")
a=rnorm(20,85,2)
b=rep(1.125,20)
means_simulated[6]=mean(a)
points(a,b,cex = .5, col = "tomato")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "tomato")
a=rnorm(20,85,2)
b=rep(1.15,20)
means_simulated[7]=mean(a)
points(a,b,cex = .5, col = "plum")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "plum")
a=rnorm(20,85,2)
b=rep(1.175,20)
means_simulated[8]=mean(a)
points(a,b,cex = .5, col = "gold")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "gold")
a=rnorm(20,85,2)
b=rep(1.2,20)
means_simulated[9]=mean(a)
points(a,b,cex = .5, col = "dimgrey")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "dimgrey")
a=rnorm(20,85,2)
b=rep(1.225,20)
means_simulated[10]=mean(a)
points(a,b,cex = .5, col = "aquamarine")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "aquamarine")
a=rnorm(20,85,2)
b=rep(1.25,20)
means_simulated[11]=mean(a)
points(a,b,cex = .5, col = "firebrick1")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "firebrick1")
mean(means_simulated)
abline(v = mean(means_simulated), col = "red")
means_simulated=vector(mode = "numeric", length = 100)
for (i in 1:100){
a=rnorm(20,85,2)
means_simulated[i]=mean(a)
}
mean(means_simulated)
t.test(angel_exp$Floral)
t.test(jadore_exp$Floral)
res_one_way <- lm(Floral~Product, data = experts)
anova(res_one_way)
res_two_ways <- lm(Floral~Product+Panelist, data = experts)
anova(res_two_ways)
anova(res_one_way, res_two_ways)
library(SensoMineR)
resdecat <- decat(experts, formul = "~Product+Panelist", firstvar = 5, graph = FALSE)
names(resdecat)
resdecat$resT
names(resdecat$resT)
resdecat$resT$Angel
for (j in 5:16){
range <- max(experts[,j])-min(experts[,j])
IQR <- quantile(experts[,j], 0.75)-quantile(experts[,j], 0.25)
std <- sd(experts[,j])
v <- var(experts[,j])
disp.parameters <- rbind(disp.parameters, c(range, IQR, std, v))
}
disp.parameters
experts <- read.csv("data/qda_perfumes_experts.csv")
experts <- read.table(file = "data/perfumes_qda_experts.csv", header = TRUE, sep = ",", quote = "\"")
for (j in 5:16){
range <- max(experts[,j])-min(experts[,j])
IQR <- quantile(experts[,j], 0.75)-quantile(experts[,j], 0.25)
std <- sd(experts[,j])
v <- var(experts[,j])
disp.parameters <- rbind(disp.parameters, c(range, IQR, std, v))
}
disp.parameters
disp.parameters <- data.frame("range" = double(), "IQR" = double(), "std" = double(), "v" = double())
for (j in 5:16){
range <- max(experts[,j])-min(experts[,j])
IQR <- quantile(experts[,j], 0.75)-quantile(experts[,j], 0.25)
std <- sd(experts[,j])
v <- var(experts[,j])
disp.parameters <- rbind(disp.parameters, c(range, IQR, std, v))
}
disp.parameters
View(experts)
View(disp.parameters)
disp.parameters <- data.frame("range" = double(), "IQR" = double(), "std" = double(), "v" = double())
for (j in 5:16){
range <- max(experts[,j])-min(experts[,j])
IQR <- quantile(experts[,j], 0.75)-quantile(experts[,j], 0.25)
std <- sd(experts[,j])
v <- var(experts[,j])
disp.parameters <- rbind(disp.parameters, c(range, IQR, std, v))
}
colnames(disp.parameters) <- c("range","IQR", "std", "v")
disp.parameters
View(experts)
experts <- read.csv("data/perfumes_qda_experts.csv" )
experts <- read.csv(file="data/perfumes_qda_experts.csv" )
experts <- read.table(file="data/perfumes_qda_experts.csv", header=TRUE, sep=",", quote="\"")
experts[1:5,1:8]
head(experts)
summary(experts)
experts$Product <- as.factor(experts$Product)
experts$Panelist <- as.factor(experts$Panelist)
experts$Session <- as.factor(experts$Session)
experts$Rank <- as.factor(experts$Rank)
head(experts)
levels(experts$Product)
levels(experts$Product)[4]
levels(experts$Product)[4] <- "CinÃ©ma"
levels(experts$Product)
for (j in 1:4) experts[,j] <- as.factor(experts[,j])
summary(experts)
x1 <- mean(experts$Spicy)
x2 <- quantile(experts$Spicy)
c(x1,x2)
loc.parameters <- data.frame("mean"=double(),"median"=double(),"q1"=double(),"q3"=double())
for (j in 5:16){
q1 <- quantile(experts[,j], probs=0.25)
med <- quantile(experts[,j], probs=0.5)
q3 <- quantile(experts[,j], probs=0.75)
me <- mean(experts[,j])
loc.parameters <- rbind(loc.parameters, c(q1,med,q3,me))
}
colnames(loc.parameters) <- c("q1","median","q3","mean")
rownames(loc.parameters) <- colnames(experts[,5:16])
loc.parameters
boxplot(experts$Fruity)
par(mfrow=c(1,3))
for (j in colnames(experts[,5:7])) boxplot(experts[,j],main=j)
par(mfrow=c(1,3))
for (j in colnames(experts[,5:7])){
boxplot(experts[,j],main=j)
abline(h=mean(experts[,j]))
}
experts$Spicy[experts$Spicy<=1]
length(experts$Spicy[experts$Spicy<=1])
experts$Spicy[1<experts$Spicy & experts$Spicy<=2]
length(experts$Spicy[1<experts$Spicy & experts$Spicy<=2])
hist(experts$Spicy)
hist(experts$Spicy, breaks=50)
hist(experts$Spicy, breaks=50, ylab="Number of occurences")
hist(experts$Spicy,
breaks=50,
probability=TRUE,
main="Distribution of the values for the Spicy attribute")
d <- density(experts$Spicy)
plot(d,main="Density of Spicy")
names(d)
plot(d$x,d$y,main="Density of Spicy")
library(ggplot2)
hist_spicy <- ggplot(experts) +
aes(x=Spicy) +
geom_histogram()
hist_spicy
ggplot(experts)+
aes(x=Spicy, y=..density..)+
geom_histogram(bins=50)
d <- density(experts$Vanilla)
i_mean <- which.max(d$x >= mean(experts$Vanilla))
pcum1 <- cumsum(d$y/sum(d$y))[i_mean]-0.15
pcum2 <- cumsum(d$y/sum(d$y))[i_mean]+0.15
x_1 <- which.max(cumsum(d$y/sum(d$y)) >= pcum1)
x_2 <- which.max(cumsum(d$y/sum(d$y)) >= pcum2)
d$x[x_1]
d$x[x_2]
plot(d, main="The notion of dispersion around the mean", type="l", lwd=2, col="blue")
polygon(c(d$x[x_1], d$x[x_1:x_2],d$x[x_2]), c(0,d$y[x_1:x_2],0), col='lightblue')
sd(experts$Fruity)
var(experts$Fruity)
sd(experts$Fruity)^2
library(dplyr)
sub_experts <- experts %>%
filter(Product=="Angel"|Product=="J'adore ET")
summary(sub_experts)
sub_experts <- experts[experts$Product=="Angel", ]
sub_experts <- experts[experts$Product=="Angel"|experts$Product=="J'adore ET", ]
condition <- c("Angel", "J'adore ET")
sub_experts <- experts[experts$Product %in% condition,]
summary(sub_experts)
droplevels(sub_experts$Product)
sub_experts$Product <- droplevels(sub_experts$Product)
summary(sub_experts)
ggplot(sub_experts) +
aes(x=Floral, color=Product) +
geom_density() +
labs(title="Density of Vanilla for the 2 products Angel and J'adore ET", x="Vanilla values", y="Density")
ggplot(sub_experts) +
aes(x=Floral, fill=Product) +
geom_density(alpha=0.5)  +
labs(title="Density of Vanilla for the 2 products Angel and J'adore ET", x="Vanilla values", y="Density")
ggplot(sub_experts) +
aes(y = Floral, x = Product, color = Product) +
geom_boxplot() +
labs(title = "Boxplots of Floral conditionnally to the two products Angel and J'adore ET")
angel_exp <- experts[experts$Product=="Angel", ]
jadore_exp <- experts[experts$Product=="J'adore ET", ]
a <- rnorm(20,85,2)
b <- rep(1,20)
plot(a, b, cex = .5, col = "dark red")
points(x = mean(a), y = 0.8, pch = 24, cex = 0.5, col = "dark red")
abline(v = 85, col = "grey")
means_simulated <- vector(mode = "numeric", length = 11)
a <- rnorm(20,85,2)
b <- rep(1,20)
means_simulated[1] <- mean(a)
plot(a, b, cex = .5, col = "dark red")
points(x = mean(a), y = 0.8, pch = 24, cex = 0.5, col = "dark red")
a <- rnorm(20,85,2)
b <- rep(1,20)
means_simulated[1] <- mean(a)
plot(a, b, cex = .5, col = "pink")
points(x = mean(a), y = 0.8, pch = 24, cex = 0.5, col = "pink")
a=rnorm(20,85,2)
b=rep(1.05,20)
means_simulated[3]=mean(a)
points(a,b,cex = .5)
points(x=mean(a),y=0.8,pch=24,cex=0.5)
a=rnorm(20,85,2)
b=rep(1.075,20)
means_simulated[4]=mean(a)
points(a,b,cex = .5, col = "green")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "green")
a=rnorm(20,85,2)
b=rep(1.1,20)
means_simulated[5]=mean(a)
points(a,b,cex = .5, col = "purple")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "purple")
a=rnorm(20,85,2)
b=rep(1.125,20)
means_simulated[6]=mean(a)
points(a,b,cex = .5, col = "tomato")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "tomato")
a=rnorm(20,85,2)
b=rep(1.15,20)
means_simulated[7]=mean(a)
points(a,b,cex = .5, col = "plum")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "plum")
a=rnorm(20,85,2)
b=rep(1.175,20)
means_simulated[8]=mean(a)
points(a,b,cex = .5, col = "gold")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "gold")
a=rnorm(20,85,2)
b=rep(1.2,20)
means_simulated[9]=mean(a)
points(a,b,cex = .5, col = "dimgrey")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "dimgrey")
a=rnorm(20,85,2)
b=rep(1.225,20)
means_simulated[10]=mean(a)
points(a,b,cex = .5, col = "aquamarine")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "aquamarine")
a=rnorm(20,85,2)
b=rep(1.25,20)
means_simulated[11]=mean(a)
points(a,b,cex = .5, col = "firebrick1")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "firebrick1")
mean(means_simulated)
abline(v = mean(means_simulated), col = "red")
means_simulated=vector(mode = "numeric", length = 100)
for (i in 1:100){
a=rnorm(20,85,2)
means_simulated[i]=mean(a)
}
mean(means_simulated)
t.test(angel_exp$Floral)
t.test(jadore_exp$Floral)
res_one_way <- lm(Floral~Product, data = experts)
anova(res_one_way)
res_two_ways <- lm(Floral~Product+Panelist, data = experts)
anova(res_two_ways)
anova(res_one_way, res_two_ways)
library(SensoMineR)
resdecat <- decat(experts, formul = "~Product+Panelist", firstvar = 5, graph = FALSE)
names(resdecat)
resdecat$resT
names(resdecat$resT)
resdecat$resT$Angel
tab.adjust.mean <- data.frame(resdecat$adjmean)
res.PCA <- PCA(tab.adjust.mean)#On recupere le resultat de la PCA
plan.coord.var <- res.PCA$var$coord[,1:2]#On recupere les coordonnees du plan des variables projetees
res.kmeans <- kmeans(plan.coord.var, centers=3)#On recupere les clusters associes aux variables pour les futures generations de nos variables hedoniques
tab.cluster<-data.frame(plan.coord.var)
tab.cluster$cluster <- res.kmeans$cluster#On rajoute les correspondances var-cluster
new.tab.hedonic <<- tab.adjust.mean#Notre nouveau tableau avec les nouvelles variables generees
generate_hedonic <- function(nb_iter, nb_clust){
temp.tab.clust <- tab.cluster %>% filter(cluster == nb_clust)
keepvar <- row.names(temp.tab.clust)
temp.tab <- tab.adjust.mean %>% select(all_of(keepvar))
for (i in 1:nb_iter){
rand <- runif(length(colnames(temp.tab)),1,10)
weights <- rand/sum(rand)
newvar <- paste0(paste0("Cluster",nb_clust),paste0("hedovar", i))
weightmat <- sapply(1:ncol(temp.tab),function(x) temp.tab[,x] * weights[x] )
newval <- apply(weightmat, 1, sum)
assign(newvar,newval)
new.tab.hedonic <<- data.frame(new.tab.hedonic, get(as.name(newvar)))
colnames(new.tab.hedonic)[length(colnames(new.tab.hedonic))] <<- newvar
}
return(new.tab.hedonic)
}
generate_hedonic(35, 1)
generate_hedonic(35, 2)
generate_hedonic(35, 3)
PCA(new.tab.hedonic, quanti.sup = 13:117)
means <- summarize_all(tab.adjust.mean, mean)
new.tab.indsup <- rbind(tab.adjust.mean,G= means)
PCA(new.tab.indsup, ind.sup = 13)
#Version avec j'adore ET en individu supplÃ©mentaire :
index <- match("J'adore ET", rownames(tab.adjust.mean))
PCA(tab.adjust.mean, ind.sup = index)
a <- rnorm(20,85,2)
b <- rep(1,20)
means_simulated[1] <- mean(a)
plot(a, b, cex = .5, col = "dark red")
points(x = mean(a), y = 0.8, pch = 24, cex = 0.5, col = "dark red")
a <- rnorm(20,85,2)
b <- rep(1,20)
means_simulated[1] <- mean(a)
plot(a, b, cex = .5, col = "pink")
points(x = mean(a), y = 0.8, pch = 24, cex = 0.5, col = "pink")
means_simulated <- vector(mode = "numeric", length = 11)
a <- rnorm(20,85,2)
b <- rep(1,20)
means_simulated[1] <- mean(a)
plot(a, b, cex = .5, col = "dark red")
points(x = mean(a), y = 0.8, pch = 24, cex = 0.5, col = "dark red")
a <- rnorm(20,85,2)
b <- rep(1,20)
means_simulated[1] <- mean(a)
plot(a, b, cex = .5, col = "pink")
points(x = mean(a), y = 0.8, pch = 24, cex = 0.5, col = "pink")
a=rnorm(20,85,2)
b=rep(1.05,20)
means_simulated[3]=mean(a)
points(a,b,cex = .5)
points(x=mean(a),y=0.8,pch=24,cex=0.5)
a=rnorm(20,85,2)
b=rep(1.075,20)
means_simulated[4]=mean(a)
points(a,b,cex = .5, col = "green")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "green")
a=rnorm(20,85,2)
b=rep(1.1,20)
means_simulated[5]=mean(a)
points(a,b,cex = .5, col = "purple")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "purple")
a=rnorm(20,85,2)
b=rep(1.125,20)
means_simulated[6]=mean(a)
points(a,b,cex = .5, col = "tomato")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "tomato")
a=rnorm(20,85,2)
b=rep(1.15,20)
means_simulated[7]=mean(a)
points(a,b,cex = .5, col = "plum")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "plum")
a=rnorm(20,85,2)
b=rep(1.175,20)
means_simulated[8]=mean(a)
points(a,b,cex = .5, col = "gold")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "gold")
a=rnorm(20,85,2)
b=rep(1.2,20)
means_simulated[9]=mean(a)
points(a,b,cex = .5, col = "dimgrey")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "dimgrey")
a=rnorm(20,85,2)
b=rep(1.225,20)
means_simulated[10]=mean(a)
points(a,b,cex = .5, col = "aquamarine")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "aquamarine")
a=rnorm(20,85,2)
b=rep(1.25,20)
means_simulated[11]=mean(a)
points(a,b,cex = .5, col = "firebrick1")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "firebrick1")
mean(means_simulated)
abline(v = mean(means_simulated), col = "red")
means_simulated <- vector(mode = "numeric", length = 11)
a <- rnorm(20,85,2)
b <- rep(1,20)
means_simulated[1] <- mean(a)
plot(a, b, cex = .5, col = "dark red")
points(x = mean(a), y = 0.8, pch = 24, cex = 0.5, col = "dark red")
a <- rnorm(20,85,2)
b <- rep(1,20)
means_simulated[1] <- mean(a)
points(a, b, cex = .5, col = "pink")
points(x = mean(a), y = 0.8, pch = 24, cex = 0.5, col = "pink")
a=rnorm(20,85,2)
b=rep(1.05,20)
means_simulated[3]=mean(a)
points(a,b,cex = .5)
points(x=mean(a),y=0.8,pch=24,cex=0.5)
a=rnorm(20,85,2)
b=rep(1.075,20)
means_simulated[4]=mean(a)
points(a,b,cex = .5, col = "green")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "green")
a=rnorm(20,85,2)
b=rep(1.1,20)
means_simulated[5]=mean(a)
points(a,b,cex = .5, col = "purple")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "purple")
a=rnorm(20,85,2)
b=rep(1.125,20)
means_simulated[6]=mean(a)
points(a,b,cex = .5, col = "tomato")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "tomato")
a=rnorm(20,85,2)
b=rep(1.15,20)
means_simulated[7]=mean(a)
points(a,b,cex = .5, col = "plum")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "plum")
a=rnorm(20,85,2)
b=rep(1.175,20)
means_simulated[8]=mean(a)
points(a,b,cex = .5, col = "gold")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "gold")
a=rnorm(20,85,2)
b=rep(1.2,20)
means_simulated[9]=mean(a)
points(a,b,cex = .5, col = "dimgrey")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "dimgrey")
a=rnorm(20,85,2)
b=rep(1.225,20)
means_simulated[10]=mean(a)
points(a,b,cex = .5, col = "aquamarine")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "aquamarine")
a=rnorm(20,85,2)
b=rep(1.25,20)
means_simulated[11]=mean(a)
points(a,b,cex = .5, col = "firebrick1")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "firebrick1")
mean(means_simulated)
abline(v = mean(means_simulated), col = "red")
means_simulated <- vector(mode = "numeric", length = 11)
a <- rnorm(20,85,2)
b <- rep(1,20)
means_simulated[1] <- mean(a)
plot(a, b, cex = .5, col = "dark red")
points(x = mean(a), y = 0.8, pch = 24, cex = 0.5, col = "dark red")
a <- rnorm(20,85,2)
b <- rep(1,20)
means_simulated[2] <- mean(a)
points(a, b, cex = .5, col = "pink")
points(x = mean(a), y = 0.8, pch = 24, cex = 0.5, col = "pink")
a=rnorm(20,85,2)
b=rep(1.05,20)
means_simulated[3]=mean(a)
points(a,b,cex = .5)
points(x=mean(a),y=0.8,pch=24,cex=0.5)
a=rnorm(20,85,2)
b=rep(1.075,20)
means_simulated[4]=mean(a)
points(a,b,cex = .5, col = "green")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "green")
a=rnorm(20,85,2)
b=rep(1.1,20)
means_simulated[5]=mean(a)
points(a,b,cex = .5, col = "purple")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "purple")
a=rnorm(20,85,2)
b=rep(1.125,20)
means_simulated[6]=mean(a)
points(a,b,cex = .5, col = "tomato")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "tomato")
a=rnorm(20,85,2)
b=rep(1.15,20)
means_simulated[7]=mean(a)
points(a,b,cex = .5, col = "plum")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "plum")
a=rnorm(20,85,2)
b=rep(1.175,20)
means_simulated[8]=mean(a)
points(a,b,cex = .5, col = "gold")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "gold")
a=rnorm(20,85,2)
b=rep(1.2,20)
means_simulated[9]=mean(a)
points(a,b,cex = .5, col = "dimgrey")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "dimgrey")
a=rnorm(20,85,2)
b=rep(1.225,20)
means_simulated[10]=mean(a)
points(a,b,cex = .5, col = "aquamarine")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "aquamarine")
a=rnorm(20,85,2)
b=rep(1.25,20)
means_simulated[11]=mean(a)
points(a,b,cex = .5, col = "firebrick1")
points(x=mean(a),y=0.8,pch=24,cex=0.5,col = "firebrick1")
mean(means_simulated)
abline(v = mean(means_simulated), col = "red")
