<<<<<<< HEAD
aes(x=Vanilla)+
geom_density()+
geom_vline(xintercept=mean_vanilla)
q1 <- quantile(experts$Vanilla, 0.25)
q2 <- quantile(experts$Vanilla, 0.75)
ggplot(experts)+
aes(x=Vanilla)+
geom_density()+
geom_vline(xintercept=q1)+
geom_vline(xintercept=q2)
ggplot(experts)+
aes(x=Vanilla)+
geom_density(fill='red', alpha=0.5)+
geom_vline(xintercept=mean_vanilla)
library(dplyr)
df <- experts %>%
# Select 3 products and 1 sensory attribute
select(c(Product, Floral)) %>%
filter(Product == "J'adore ET" | Product == "Angel" | Product == "Chanel N5" ) %>%
# Add the mean's column
group_by(Product) %>%
mutate(mu=mean(Floral))
ggplot(df) +
aes(x=Floral, color=Product) +
geom_density() +
geom_vline(aes(xintercept=mu, color=Product)) +
labs(title="Density of Floral according three products")
ggplot(df) +
aes(y=Floral, x= Product, color=Product) +
geom_boxplot() +
labs(title="Boxplot of Floral according three products")
ggplot(df)+
aes(y=Floral, x= Product, color=Product) +
geom_boxplot() +
stat_summary(mapping=aes(group=1), fun=mean, geom="line", color="black") +
stat_summary(fun=mean, geom="point")
df <- experts %>%
select(c(Product, Floral, Citrus, Spicy, Heady)) %>%
filter(Product == "J'adore ET" | Product == "Angel" | Product == "Chanel N5" )
# First sensory attribute
a1 <- ggplot(df)+
aes(y=Floral, x= Product, color=Product)+geom_boxplot() +
stat_summary(fun=mean, geom="line", aes(group=1), color="black") +
stat_summary(fun=mean, geom="point")+
# Delete the x-axis:
theme(axis.title.x=element_blank(),
axis.text.x=element_blank())
# Second sensory attribute
a2 <- ggplot(df)+
aes(y=Spicy, x= Product, color=Product)+geom_boxplot() +
stat_summary(fun=mean, geom="line", aes(group=1), color="black") +
stat_summary(fun=mean, geom="point")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank())
# Third sensory attribute
a3 <- ggplot(df)+
aes(y=Citrus, x= Product, color=Product)+geom_boxplot() +
stat_summary(fun=mean, geom="line", aes(group=1), color="black") +
stat_summary(fun=mean, geom="point")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank())
# Fourth sensory attribute
a4 <- ggplot(df)+
aes(y=Heady, x= Product, color=Product)+geom_boxplot() +
stat_summary(fun=mean, geom="line", aes(group=1), color="black") +
stat_summary(fun=mean, geom="point")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank())
grid.arrange(a1, a2, a3,a4, ncol=2, nrow = 2)
a1 <- ggplot(df)+
aes(y=Floral, x= Product, color=Product)+
stat_summary(fun=mean, geom="line", aes(group=1), color="black") +
stat_summary(fun=mean, geom="point")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank())
a2 <- ggplot(df)+
aes(y=Citrus, x= Product, color=Product) +
stat_summary(fun=mean, geom="line", aes(group=1), color="black") +
stat_summary(fun=mean, geom="point")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank())
a3 <- ggplot(df)+
aes(y=Spicy, x= Product, color=Product) +
stat_summary(fun=mean, geom="line", aes(group=1), color="black") +
stat_summary(fun=mean, geom="point")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank())
a4 <- ggplot(df)+aes(y=Heady, x= Product, color=Product) +
stat_summary(fun=mean, geom="line", aes(group=1), color="black") +
stat_summary(fun=mean, geom="point")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank())
grid.arrange(a1, a2, a3, a4, ncol=2, nrow = 2)
for (attribute in colnames(df)[-1]){
df[, attribute] <- df[, attribute]/sd(df[, attribute])
}
a1 <- ggplot(df)+
aes(y=Floral, x= Product, color=Product)+
stat_summary(fun=mean, geom="line", aes(group=1), color="black") +
stat_summary(fun=mean, geom="point")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank())
a2 <- ggplot(df)+
aes(y=Citrus, x= Product, color=Product) +
stat_summary(fun=mean, geom="line", aes(group=1), color="black") +
stat_summary(fun=mean, geom="point")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank())
a3 <- ggplot(df)+
aes(y=Spicy, x= Product, color=Product) +
stat_summary(fun=mean, geom="line", aes(group=1), color="black") +
stat_summary(fun=mean, geom="point")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank())
a4 <- ggplot(df)+
aes(y=Heady, x= Product, color=Product) +
stat_summary(fun=mean, geom="line", aes(group=1), color="black") +
stat_summary(fun=mean, geom="point")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank())
grid.arrange(a1, a2, a3, a4, ncol=2, nrow = 2)
means <- df %>% group_by(Product) %>% summarise(
mean_Spicy=mean(Spicy),
mean_Citrus=mean(Citrus),
mean_Floral=mean(Floral)
)
df.means <- experts %>%
select(c(Product, Floral, Citrus, Spicy, Heady, Fruity, Green, Vanilla, Woody)) %>%
filter(Product == "J'adore ET" | Product == "Angel" | Product == "Chanel N5" | Product == "Coco Mademoiselle"| Product == "Aromatics Elixir"| Product == "Cinéma"| Product == "J'adore EP"| Product == "Shalimar")
for (attribute in colnames(df.means)[-1]){
df.means[, attribute] <- df.means[, attribute]/sd(df.means[, attribute])
}
means.V2 <- df.means %>% group_by(Product) %>% summarise(
mean_Spicy=mean(Spicy),
mean_Citrus=mean(Citrus),
mean_Floral=mean(Floral),
mean_Heady=mean(Heady),
mean_Fruity=mean(Fruity),
mean_Green=mean(Green),
mean_Vanilla=mean(Vanilla),
mean_Woody=mean(Woody)
)
spicy.matrix <- as.matrix(dist(means.V2$mean_Spicy))
citrus.matrix <- as.matrix(dist(means.V2$mean_Citrus))
floral.matrix <- as.matrix(dist(means.V2$mean_Floral))
heady.matrix <- as.matrix(dist(means.V2$mean_Heady))
fruity.matrix <- as.matrix(dist(means.V2$mean_Fruity))
green.matrix <- as.matrix(dist(means.V2$mean_Green))
Vanilla.matrix <- as.matrix(dist(means.V2$mean_Vanilla))
woody.matrix <- as.matrix(dist(means.V2$mean_Woody))
a1 <- ggplot(means.V2)+
aes(x = mean_Spicy, y=mean_Citrus, color=Product)+
geom_path(aes(group=1),color="black")+
geom_point()
a2 <- ggplot(means.V2)+
aes(x = mean_Spicy, y=mean_Floral, color=Product)+
geom_path(aes(group=1),color="black")+
geom_point()
a3 <- ggplot(means.V2)+
aes(x = mean_Citrus, y=mean_Floral, color=Product)+
geom_path(aes(group=1),color="black")+
geom_point()
grid.arrange(a1, a2, a3, ncol=2, nrow = 2)
means.variables <- data.frame(means.V2, row.names = 1)
cov.att <- cov(means.variables)
dist.prod <- as.matrix(dist(means.variables))
heatmap(cov.att)
heatmap(dist.prod)
Products_sc_Mat <- as.matrix(dist(scale(dist.prod))^2)
sum(Products_sc_Mat)/(2*dim(Products_sc_Mat)[1]*(dim(Products_sc_Mat)[1]-1))
Att_sc_Mat <- as.matrix(dist(scale(cov.att))^2)
sum(Att_sc_Mat)/(2*dim(Att_sc_Mat)[1]*(dim(Att_sc_Mat)[1]-1))
G1 <- as.data.frame(cov.att) %>% select(mean_Citrus, mean_Floral, mean_Fruity, mean_Green)
G2 <- as.data.frame(cov.att) %>% select(mean_Spicy, mean_Heady, mean_Woody, mean_Vanilla)
Att_G1_sc_Mat <- as.matrix(dist(scale(G1))^2)
inertia.G1 <- sum(Att_G1_sc_Mat)/(2*dim(Att_G1_sc_Mat)[1]*(dim(Att_G1_sc_Mat)[1]-1))
Att_G2_sc_Mat <- as.matrix(dist(scale(G2))^2)
inertia.G2 <- sum(Att_G2_sc_Mat)/(2*dim(Att_G2_sc_Mat)[1]*(dim(Att_G2_sc_Mat)[1]-1))
inertia.G1+inertia.G2
G1 <- as.data.frame(dist.prod) %>% select("Aromatics Elixir", Shalimar, "Chanel N5", Angel)
G2 <- as.data.frame(dist.prod) %>% select(Cinéma, "Coco Mademoiselle", "J'adore EP", "J'adore ET")
Att_G1_sc_Mat <- as.matrix(dist(scale(G1))^2)
inertia.G1 <- sum(Att_G1_sc_Mat)/(2*dim(Att_G1_sc_Mat)[1]*(dim(Att_G1_sc_Mat)[1]-1))
Att_G2_sc_Mat <- as.matrix(dist(scale(G2))^2)
inertia.G2 <- sum(Att_G2_sc_Mat)/(2*dim(Att_G2_sc_Mat)[1]*(dim(Att_G2_sc_Mat)[1]-1))
inertia.G1+inertia.G2
library(FactoMineR)
res<-PCA(scale(means.variables), graph = FALSE, scale.unit = F)
res$ind$coord
res$var$coord
svd <- svd(scale(means.variables))
diag <- diag(svd$d)
#Verification
svd$u%*%diag%*%t(svd$v)
scale(as.matrix(means.variables))
#Individuals coordinates
scale(means.variables)%*%svd$v
#Variables coordinates
t(scale(means.variables))%*%svd$u/sqrt(dim(means.variables)[1])
#Comparate with PCA()
res$ind$coord
res$var$coord
NIPALS <- function(X){
X = as.matrix(X)
N = nrow(X)
M = ncol(X)
D = diag(1/N, N)
Xini = X
qrX=qr(X)
rang = qrX$rank
vec=matrix(0,nrow=M,ncol=rang)
t=X[,1]
i=1
p=t(X)%*%t%*%(1/(t(t)%*%t))
p=p/as.numeric(sqrt(t(p)%*%p))
print(rang)
while (i<rang+1) {
norm=1
while(norm>0.000001){
t=(X%*%p)%*%(1/(t(p)%*%p))
p2=t(X)%*%t%*%(1/(t(t)%*%t))
p2=p2/as.numeric(sqrt(t(p2)%*%p2))
diff=p2-p
norm=t(diff)%*%diff
p=p2
print(p)
print(i)
}
vec[,i]=p
X=X-(t%*%t(p))
i=i+1
}
return(vec)
}
NIPALS(means.variables)
svd(means.variables)$v
library("FactoMineR")
library("factoextra")
data(wine)
# We keep actives variables
wine_quanti <- wine[, -c(1,2,30,31)]
group1 <- wine_quanti[, 1:5]
group2 <- wine_quanti[, 6:8]
group3 <- wine_quanti[, 9:18]
group4 <- wine_quanti[, 19:27]
# PCA on each group
res.pca1 <- PCA(group1)
res.pca2 <- PCA(group2)
res.pca3 <- PCA(group3)
res.pca4 <- PCA(group4)
# First eigen values of each PCA
egv1 <- res.pca1$eig[1]
egv2 <- res.pca2$eig[1]
egv3 <- res.pca3$eig[1]
egv4 <- res.pca4$eig[1]
# Vector of weight
w <- c(1/c(rep(egv1,5),rep(egv2,3),rep(egv3,10),rep(egv4,9) ))
res.pca.pon <- PCA(wine_quanti, col.w = w)
coord_pca_pond <- res.pca.pon$ind$coord
res.pca.pon$eig
svd.triplet(scale(wine_quanti))
PCA(wine_quanti)$svd
vanilla <- experts$Vanilla
plot(x=vanilla, y=rep(1, length(vanilla)), main="Vanilla", ylab="")
abline(v = mean(vanilla), col="red", lwd=3, lty=2)
df <- data.frame(experts$Vanilla, experts$Citrus)
colnames(df) <- c("Vanilla", "Citrus")
plot(df)
points(x=mean(df$Vanilla),y=mean(df$Citrus), type="p", col="red",lwd=3, lty=2)
text(mean(df$Vanilla)+0.5, mean(df$Citrus)+0.5, "Center of gravity", col="red")
df <- data.frame(experts[,5:16])
colMeans(df)
matG <- matrix(colMeans(df[1:10,]), nrow(df[1:10,]), ncol(df) , byrow=TRUE)
apply((df[1:10,] - matG)^2, 1, sum)
distG <- apply((df[1:10,] - matG)^2, 1, sum)
sum(distG)/(nrow(df[1:10,])-1)
variances <- c()
for (j in 1:12){
variances <- cbind(variances, var(df[1:10,j]))
}
variances
sum(variances)
df <- data.frame(experts$Fruity, experts$Floral)
colnames(df) <- c("Fruity", "Floral")
plot(df)
N <- length(df$Floral)
1/(N-1)*sum((df$Fruity-mean(df$Fruity))*(df$Floral-mean(df$Floral)))
cov(df$Fruity,df$Floral)
cov <- 1/(N-1)*sum((df$Fruity-mean(df$Fruity))*(df$Floral-mean(df$Floral)))
cov / (sqrt(var(df$Fruity))*sqrt(var(df$Floral)))
cor(df$Fruity, df$Floral)
f <- (16*0.26/15)/(21*0.37/20)
v1 <- qf(0.025,df1=15,df2=20)
v2 <- qf(0.975,df1=15,df2=20)
var.test(experts$Spicy, experts$Heady)
(288*var(experts$Spicy)/287)/(288*var(experts$Heady)/287)
x<-c(442.7, 380.2, 406.8, 507.7, 615.1, 486.8, 438.7, 390.7, 399.5, 789.9)
res<-t.test(x, mu=200) #real test
## find manually :
xbar <- (1/10)*sum(x) # estimate mean of x
diff <- x-xbar
sumsq <- (1/9)*sum(diff^2) # non-biaised estimate var of x
t <- sqrt(10)*(xbar-200)/sqrt(sumsq)
(mean(experts$Spicy) - mean(experts$Heady))/sqrt((var(experts$Spicy)/288)+(var(experts$Heady)/288))
t.test(experts$Spicy, experts$Heady)
df <- data.frame(experts$Product, experts$Woody)
colnames(df) <- c("Product", "Woody")
one.way <- aov(Woody~Product, data=df)
summary(one.way)
x1 <- 6.4*10.6
x2 <- x1*4
x3 <- 377.36 - x2
x4 <- x3/10.6
x5 <- 4+x4
df <- cbind(df, experts$Session)
colnames(df) <- c("Product","Woody","Session")
two.way <- aov(Woody~Product+Session, data=df)
summary(two.way)
interaction <- aov(Woody~Product*Session, data=df)
summary(interaction)
library(SensoMineR)
graphinter(df,col.p=1,col.j=3,firstvar=2,lastvar=2,numr=1,numc=1)
res.decat <- decat(experts,formul="~Product+Panelist+Session",firstvar=5, lastvar=ncol(experts),graph=FALSE)
names(res.decat)
res.decat$resF
heady.aov <- aov(Heady~Product+Panelist+Session+Product:Panelist+Product:Session+Panelist:Session, data=experts)
summary(heady.aov)
library(dplyr)
library(questionr)
data_fruity <- experts %>% filter(Fruity>6)
data_table <- table(data_fruity$Product)
tab <- table(data_fruity$Product, data_fruity$Panelist)
cprop(tab)
data(tea)
summary(tea)
tab <- table(tea$breakfast,tea$tea.time)
tab
theo11 <- (sum(tab[1,])*sum(tab[,1]))/sum(tab)
theo12 <- (sum(tab[1,])*sum(tab[,2]))/sum(tab)
theo21 <- (sum(tab[2,])*sum(tab[,1]))/sum(tab)
theo22 <- (sum(tab[2,])*sum(tab[,2]))/sum(tab)
theo <- cbind(c(theo11,theo21),c(theo12,theo22))
colnames(theo)<-colnames(tab)
row.names(theo)<- row.names(tab)
theo
tab
newtab <- tab-theo
newtab <- newtab^2
newtab <- newtab/theo
newtab
chi2 <- sum(newtab)
chi2
res.condes <- condes(donnee = data.frame(experts$Fruity, experts$Floral), num.var = 1)
res.condes$quanti
res.condes <- condes(donnee = data.frame(experts$Fruity, experts$Product), num.var = 1)
res.condes$quali
res.condes <- condes(donnee = experts, num.var = 5)
res.condes$quanti
res.condes$quali
res.condes$category
res.catdes <- catdes(donnee = data.frame(experts$Product, experts$Green), num.var = 1)
res.catdes$quanti.var
res.catdes$quanti
catdes(donnee = data.frame(experts$Product, experts$Green), num.var = 1, proba=1)
res.catdes <- catdes(donnee = data.frame(experts$Product, experts$Session), num.var = 1)
res.catdes <- catdes(donnee = data.frame(experts$Product, experts$Session), num.var = 1, proba = 1)
res.catdes$test.chi2
res.catdes$category
res.catdes <- catdes(donnee = experts, num.var = 4)
res.catdes$test.chi2
res.catdes$quanti.var
res.catdes$quanti
library(FactoMineR)
library(SensoMineR)
#import
GMO <- read.csv("data/gmo.csv", sep=';')
#transform into factor
for (i in 1:21)
{
GMO[, i] <- as.factor(GMO[, i])
}
#summary
summary(GMO)
#selection variable Political.Party and Position.Al.A
GMO.Al.A <- GMO[,c( "Political.Party","Position.Al.A")]
#or tidyverse version :
library(dplyr)
GMO.Al.A <- GMO %>% select(c( Political.Party,Position.Al.A,))
library(ggplot2)
ggplot(GMO.Al.A, aes(Position.Al.A, ..count..)) + geom_bar(aes(fill = Political.Party), color="black", position = "dodge") + ggtitle("Barplot of cross-categories")
## ..count.. : stat transformation of the original data set
set.seed(7)
ind.sample <- sample(1:135)
GMO.Al.A.Sample <- data.frame("Position.Al.A"=GMO.Al.A$Position.Al.A[ind.sample],'Political.Party'=GMO.Al.A$Political.Party)
library(FactoMineR)
library(SensoMineR)
#import
GMO <- read.csv("data/gmo.csv", sep=';')
GMO<-GMO[-136,]
#transform into factor
for (i in 1:21)
{
GMO[, i] <- as.factor(GMO[, i])
}
=======
coord.en.V2 <- data.frame("words"=rownames(res.CA.en.V2$col$coord))
coord.en.V2 <- coord.en.V2 %>% mutate(Dim1.en=res.CA.en.V2$col$coord[,1], Dim2.en=res.CA.en.V2$col$coord[,2])
coord.en.V2 <- as.data.frame(coord.en.V2[order(coord.en.V2$Dim1.en,coord.en.V2$Dim2.en),])
coord.viet.acc.V2 <- data.frame("words"=rownames(res.CA.viet.V2$col$coord))
coord.viet.acc.V2 <- coord.viet.acc.V2 %>% mutate(Dim1.viet.acc = res.CA.viet.V2$col$coord[,1], Dim2.viet.acc=res.CA.viet.V2$col$coord[,2])
coord.viet.acc.V2 <- as.data.frame(coord.viet.acc.V2[order(coord.viet.acc.V2$Dim1.viet.acc,coord.viet.acc.V2$Dim2.viet.acc),])
coord.viet.sans.acc.V2 <- data.frame("words"=rownames(res.CA.viet.sans.accent.V2$col$coord))
coord.viet.sans.acc.V2 <- coord.viet.sans.acc.V2 %>% mutate(Dim1.viet.sans.acc = res.CA.viet.sans.accent.V2$col$coord[,1], Dim2.viet.sans.acc=res.CA.viet.sans.accent.V2$col$coord[,2])
coord.viet.sans.acc.V2 <- as.data.frame(coord.viet.sans.acc.V2[order(coord.viet.sans.acc.V2$Dim1.viet.sans.acc,coord.viet.sans.acc.V2$Dim2.viet.sans.acc),])
coord <- cbind(coord.en.V2, coord.viet.acc.V2, coord.viet.sans.acc.V2)
library(FactoMineR)
library(SensoMineR)
#import
GMO <- read.csv("data/gmo.csv", sep=';')
#transform into factor
for (i in 1:21)
{
GMO[, i] <- as.factor(GMO[, i])
}
#summary
summary(GMO)
#selection variable Political.Party and Position.Al.A
GMO.Al.A <- GMO[,c( "Political.Party","Position.Al.A")]
#or tidyverse version :
library(dplyr)
GMO.Al.A <- GMO %>% select(c( Political.Party,Position.Al.A,))
library(ggplot2)
ggplot(GMO.Al.A, aes(Position.Al.A, ..count..)) + geom_bar(aes(fill = Political.Party), color="black", position = "dodge") + ggtitle("Barplot of cross-categories")
## ..count.. : stat transformation of the original data set
set.seed(7)
ind.sample <- sample(1:135)
GMO.Al.A.Sample <- data.frame("Position.Al.A"=GMO.Al.A$Position.Al.A[ind.sample],'Political.Party'=GMO.Al.A$Political.Party)
set.seed(7)
ind.sample <- sample(1:136)
GMO.Al.A.Sample <- data.frame("Position.Al.A"=GMO.Al.A$Position.Al.A[ind.sample],'Political.Party'=GMO.Al.A$Political.Party)
#visualization
ggplot(GMO.Al.A.Sample, aes(Position.Al.A, ..count..)) + geom_bar(aes(fill = Political.Party), color="black", position = "dodge") + ggtitle("Barplot of cross-categories sampled")
#We start by adding margins to have row and column profiles
GMO_table <- as.data.frame.matrix(table(GMO.Al.A))
fi <- apply(GMO_table, 1, sum)/sum(GMO_table)
fj <- apply(GMO_table, 2, sum)/sum(GMO_table)
GMO_theo <- matrix(nrow=5,ncol=4)
for(i in 1:5){
for(j in 1:4) GMO_theo[i, j] <- (fi[i]*fj[j])
}
rownames(GMO_theo) <- rownames(GMO_table)
#We start by adding margins to have row and column profiles
GMO_table <- as.data.frame.matrix(table(GMO.Al.A))
fi <- apply(GMO_table, 1, sum)/sum(GMO_table)
fj <- apply(GMO_table, 2, sum)/sum(GMO_table)
GMO_theo <- matrix(nrow=5,ncol=4)
for(i in 1:5){
for(j in 1:4) GMO_theo[i, j] <- (fi[i]*fj[j])
}
rownames(GMO_theo) <- rownames(GMO_table)
set.seed(7)
ind.sample <- sample(1:135)
GMO.Al.A.Sample <- data.frame("Position.Al.A"=GMO.Al.A$Position.Al.A[ind.sample],'Political.Party'=GMO.Al.A$Political.Party)
library(ggplot2)
ggplot(GMO.Al.A, aes(Position.Al.A, ..count..)) + geom_bar(aes(fill = Political.Party), color="black", position = "dodge") + ggtitle("Barplot of cross-categories")
## ..count.. : stat transformation of the original data set
library(FactoMineR)
library(SensoMineR)
#import
GMO <- read.csv("data/gmo.csv", sep=';')
#transform into factor
for (i in 1:21)
{
GMO[, i] <- as.factor(GMO[, i])
}
#summary
summary(GMO)
#selection variable Political.Party and Position.Al.A
GMO.Al.A <- GMO[,c( "Political.Party","Position.Al.A")]
#or tidyverse version :
library(dplyr)
GMO.Al.A <- GMO %>% select(c( Political.Party,Position.Al.A,))
library(ggplot2)
ggplot(GMO.Al.A, aes(Position.Al.A, ..count..)) + geom_bar(aes(fill = Political.Party), color="black", position = "dodge") + ggtitle("Barplot of cross-categories")
## ..count.. : stat transformation of the original data set
View(GMO.Al.A)
library(ggplot2)
ggplot(GMO.Al.A, aes(Position.Al.A, ..count..)) + geom_bar(aes(fill = Political.Party), color="black", position = "dodge") + ggtitle("Barplot of cross-categories")
## ..count.. : stat transformation of the original data set
library(FactoMineR)
library(SensoMineR)
#import
GMO <- read.csv("data/gmo.csv", sep=';')
#transform into factor
for (i in 1:21)
{
GMO[, i] <- as.factor(GMO[, i])
}
#summary
summary(GMO)
#selection variable Political.Party and Position.Al.A
GMO.Al.A <- GMO[,c( "Political.Party","Position.Al.A")]
#or tidyverse version :
library(dplyr)
GMO.Al.A <- GMO %>% select(c( Political.Party,Position.Al.A,))
library(FactoMineR)
library(SensoMineR)
#import
GMO <- read.csv("data/gmo.csv", sep=';')
#transform into factor
for (i in 1:21)
{
GMO[, i] <- as.factor(GMO[, i])
}
#summary
summary(GMO)
#selection variable Political.Party and Position.Al.A
GMO.Al.A <- GMO[,c( "Political.Party","Position.Al.A")]
#or tidyverse version :
library(dplyr)
GMO.Al.A <- GMO %>% select(c( Political.Party,Position.Al.A,))
library(ggplot2)
ggplot(GMO.Al.A, aes(Position.Al.A, ..count..)) + geom_bar(aes(fill = Political.Party), color="black", position = "dodge") + ggtitle("Barplot of cross-categories")
## ..count.. : stat transformation of the original data set
set.seed(7)
ind.sample <- sample(1:135)
GMO.Al.A.Sample <- data.frame("Position.Al.A"=GMO.Al.A$Position.Al.A[ind.sample],'Political.Party'=GMO.Al.A$Political.Party)
#visualization
ggplot(GMO.Al.A.Sample, aes(Position.Al.A, ..count..)) + geom_bar(aes(fill = Political.Party), color="black", position = "dodge") + ggtitle("Barplot of cross-categories sampled")
library(FactoMineR)
library(SensoMineR)
#import
GMO <- read.csv("data/gmo.csv", sep=';')
#transform into factor
for (i in 1:21)
{
GMO[, i] <- as.factor(GMO[, i])
}
>>>>>>> f91e5f810b244e9eabf47a78050972067d84ee34
#summary
summary(GMO)
#selection variable Political.Party and Position.Al.A
GMO.Al.A <- GMO[,c( "Political.Party","Position.Al.A")]
#or tidyverse version :
library(dplyr)
GMO.Al.A <- GMO %>% select(c( Political.Party,Position.Al.A,))
library(ggplot2)
ggplot(GMO.Al.A, aes(Position.Al.A, ..count..)) + geom_bar(aes(fill = Political.Party), color="black", position = "dodge") + ggtitle("Barplot of cross-categories")
## ..count.. : stat transformation of the original data set
set.seed(7)
ind.sample <- sample(1:135)
GMO.Al.A.Sample <- data.frame("Position.Al.A"=GMO.Al.A$Position.Al.A[ind.sample],'Political.Party'=GMO.Al.A$Political.Party)
#visualization
ggplot(GMO.Al.A.Sample, aes(Position.Al.A, ..count..)) + geom_bar(aes(fill = Political.Party), color="black", position = "dodge") + ggtitle("Barplot of cross-categories sampled")
#We start by adding margins to have row and column profiles
GMO_table <- as.data.frame.matrix(table(GMO.Al.A))
fi <- apply(GMO_table, 1, sum)/sum(GMO_table)
fj <- apply(GMO_table, 2, sum)/sum(GMO_table)
GMO_theo <- matrix(nrow=5,ncol=4)
for(i in 1:5){
for(j in 1:4) GMO_theo[i, j] <- (fi[i]*fj[j])
}
rownames(GMO_theo) <- rownames(GMO_table)
colnames(GMO_theo) <- colnames(GMO_table)
#barplot
par(mfrow=c(1,3))
barplot(t(as.table(as.matrix(GMO_theo))), beside = TRUE, main="effectifs theoriques")
barplot(table(GMO.Al.A.Sample)/135, beside = TRUE,main="sample")
barplot(t(table(GMO.Al.A)/135), beside = TRUE,main="non sample")
library(tidyr)
df_theo <- as.data.frame.matrix(GMO_theo)
library(tibble)
df <- rownames_to_column(df_theo, "Political.Party")
df <- df %>% pivot_longer(!Political.Party, names_to="Position.Al.A", values_to = "frequence")
ggplot(df, aes(y=frequence,x=Position.Al.A, fill=Political.Party))+
geom_col( position = "dodge", color="black")+ggtitle("Barplot of theorical table")
fi <- apply(GMO_table, 1, sum)/sum(GMO_table)
fj <- apply(GMO_table, 2, sum)/sum(GMO_table)
GMO_deviation <- matrix(nrow=5, ncol=4)
for(i in 1:5){
for(j in 1:4) GMO_deviation[i, j] <- (GMO_table[i, j]/sum(GMO_table)/((fi[i]*fj[j])))-1
}
rownames(GMO_deviation) <- rownames(GMO_table)
colnames(GMO_deviation) <- colnames(GMO_table)
ni <- apply(GMO_table,1, sum)#row sum
nj <- apply(GMO_table,2, sum)#col sum
n <- as.numeric(sum(ni))
GMO_chi2_row <- matrix(nrow=5, ncol=5)
for(i in 1:5){
for(j in 1:5){GMO_chi2_row[i, j] <- sum((n/nj)*((GMO_table[i,]/ni[i]) - (GMO_table[j,]/ni[j]))^2)}
}
rownames(GMO_chi2_row) <- rownames(GMO_table)
colnames(GMO_chi2_row) <- rownames(GMO_table)
dim <- ncol(GMO_chi2_row)
image(1:dim, 1:dim,GMO_chi2_row, axes=F, xlab="", ylab="")
axis(1, 1:dim, row.names(GMO_chi2_row), cex.axis=1, las=3)
axis(2, 1:dim, row.names(GMO_chi2_row), cex.axis=1, las=1)
text(expand.grid(1:dim, 1:dim), sprintf("%0.1f", GMO_chi2_row), cex=1)
res.chi2.gmo <- chisq.test(GMO_table)
res.chi2.sample <- chisq.test(table(GMO.Al.A.Sample))
res.chi2.gmo$residuals
res.CA <- CA(GMO_table)
plot(res.CA, invisible = "col")
plot(res.CA, invisible = "row")
res.descfreq <- descfreq(GMO_table, proba = 1)
res.descfreq
library(readxl)
library(dplyr)
library(FactoMineR)
library(vietnameseConverter)
library(stringi)
barbes <- read_excel("data/barbes.xlsx")
trad <- read.table("data/traduction.txt", sep="\t", header = TRUE, encoding = "UTF-8")
colnames(trad) <- "trad_avec_accents"
trad <- trad %>% mutate(trad_sans_accents = stri_trans_general(trad_avec_accents, "Latin-ASCII"))
barbes <- cbind(barbes, trad)
barbes$Barbes <- as.factor(barbes$Barbes)
barbes$Juge <- as.factor(barbes$Juge)
summary(barbes)
summary(barbes$Barbes)
# Un B7 au lieu de b7 traîne, correction :
levels(barbes$Barbes) <- c("b1","b2", "b3", "b4","b5","b6","b7","b7","b8")
summary(barbes$Barbes)
barbes.en <- barbes[,-4]
barbes.en <- barbes.en[,-4]
barbes.viet <- barbes[,-3]
res.textual.en <- textual(barbes.en,num.text = 3, sep.word = ";", contingence.by = 2)
eff.en <- as.data.frame(apply(res.textual.en$cont.table, MARGIN = 2, FUN=sum))
# Tout les mots : 627 mots
words_selection.en <- res.textual.en$cont.table[,apply(res.textual.en$cont.table, 2, sum)>=1]
# Sélection des mots qui apparaissent plus de 10 fois : 31
words_selection_sup10.en <- res.textual.en$cont.table[,apply(res.textual.en$cont.table, 2, sum)>=10]
res.CA.en <- CA(words_selection.en, graph=FALSE)
#plot.CA(res.CA.en) -> illisible
res.CA.sup10.en <- CA(words_selection_sup10.en, graph=FALSE)
plot.CA(res.CA.sup10.en, invisible="row")
plot.CA(res.CA.sup10.en, invisible="col")
res.textual.viet <- textual(barbes.viet[,-4],num.text = 3, contingence.by = 2, sep.word = ";")
eff.viet <- as.data.frame(apply(res.textual.viet$cont.table, MARGIN = 2, FUN=sum))
# Tout les mots : 669 mots
words_selection.viet <- res.textual.viet$cont.table[,apply(res.textual.viet$cont.table, 2, sum)>=1]
# Sélection des mots qui apparaissent plus de 10 fois : 29
words_selection_sup10.viet <- res.textual.viet$cont.table[,apply(res.textual.viet$cont.table, 2, sum)>=10]
res.CA.viet <- CA(words_selection.viet, graph=FALSE)
#plot.CA(res.CA.viet) -> illisible
res.CA.sup10.viet <- CA(words_selection_sup10.viet, graph=FALSE)
<<<<<<< HEAD
plot.CA(res.CA.sup10.viet)
=======
plot.CA(res.CA.sup10.viet, invisible="row")
plot.CA(res.CA.sup10.viet, invisible="col")
res.textual.viet.sans.accent <- textual(barbes.viet[,-3],num.text = 3, contingence.by = 2, sep.word = ";")
eff.viet <- as.data.frame(apply(res.textual.viet.sans.accent$cont.table, MARGIN = 2, FUN=sum))
# Tout les mots : 669 mots
words_selection.viet.sans.accent <- res.textual.viet.sans.accent$cont.table[,apply(res.textual.viet.sans.accent$cont.table, 2, sum)>=1]
# Sélection des mots qui apparaissent plus de 10 fois : 29
words_selection_sup10.viet.sans.accent <- res.textual.viet.sans.accent$cont.table[,apply(res.textual.viet.sans.accent$cont.table, 2, sum)>=10]
res.CA.viet.sans.accent <- CA(words_selection.viet.sans.accent, graph=FALSE)
# plot.CA(res.CA.viet) -> illisible
res.CA.sup10.viet.sans.accent <- CA(words_selection_sup10.viet.sans.accent, graph=FALSE)
plot.CA(res.CA.sup10.viet.sans.accent, invisible="row")
plot.CA(res.CA.sup10.viet.sans.accent, invisible="col")
barbesV2 <- read_excel("data/barbesV2.xlsx")
barbesV2 <- barbesV2 %>% mutate(trad_sans_accents = stri_trans_general(Trad, "Latin-ASCII"))
barbesV2$Juge <- as.factor(barbesV2$Juge)
barbesV2$Barbes <- as.factor(barbesV2$Barbes)
barbesV2.viet.acc <- as.data.frame(barbesV2[, -c(3,5)])
barbesV2.viet.sans.acc <- as.data.frame(barbesV2[, -c(3,4)])
barbesV2.en <- as.data.frame(barbesV2[,-c(4,5)])
res.textual.en.V2 <- textual(barbesV2.en,num.text = 3, contingence.by = 2, sep.word = ";")
eff.en.V2 <- as.data.frame(apply(res.textual.en.V2$cont.table, MARGIN = 2, FUN=sum))
words_selection.en.V2 <- res.textual.en.V2$cont.table[,apply(res.textual.en.V2$cont.table, 2, sum)>=1]
res.CA.en.V2 <- CA(words_selection.en.V2, graph=FALSE)
plot.CA(res.CA.en.V2, invisible = "row")
plot.CA(res.CA.en.V2, invisible="col")
res.textual.viet.V2 <- textual(barbesV2.viet.acc,num.text = 3, contingence.by = 2, sep.word = ";")
eff.viet.V2 <- as.data.frame(apply(res.textual.viet.V2$cont.table, MARGIN = 2, FUN=sum))
words_selection.viet.V2 <- res.textual.viet.V2$cont.table[,apply(res.textual.viet.V2$cont.table, 2, sum)>=1]
res.CA.viet.V2 <- CA(words_selection.viet.V2, graph=FALSE)
plot.CA(res.CA.viet.V2, invisible="row")
plot.CA(res.CA.viet.V2, invisible="col")
res.textual.viet.sans.accent.V2 <- textual(barbesV2.viet.sans.acc,num.text = 3, contingence.by = 2, sep.word = ";")
eff.viet.V2 <- as.data.frame(apply(res.textual.viet.sans.accent.V2$cont.table, MARGIN = 2, FUN=sum))
words_selection.viet.sans.accent.V2 <- res.textual.viet.sans.accent.V2$cont.table[,apply(res.textual.viet.sans.accent.V2$cont.table, 2, sum)>=1]
res.CA.viet.sans.accent.V2 <- CA(words_selection.viet.sans.accent.V2, graph=FALSE)
plot.CA(res.CA.viet.sans.accent.V2, invisible = "row")
plot.CA(res.CA.viet.sans.accent.V2, invisible = "col")
coord.en.V2 <- data.frame("words"=rownames(res.CA.en.V2$col$coord))
coord.en.V2 <- coord.en.V2 %>% mutate(Dim1.en=res.CA.en.V2$col$coord[,1], Dim2.en=res.CA.en.V2$col$coord[,2])
coord.en.V2 <- as.data.frame(coord.en.V2[order(coord.en.V2$Dim1.en,coord.en.V2$Dim2.en),])
coord.viet.acc.V2 <- data.frame("words"=rownames(res.CA.viet.V2$col$coord))
coord.viet.acc.V2 <- coord.viet.acc.V2 %>% mutate(Dim1.viet.acc = res.CA.viet.V2$col$coord[,1], Dim2.viet.acc=res.CA.viet.V2$col$coord[,2])
coord.viet.acc.V2 <- as.data.frame(coord.viet.acc.V2[order(coord.viet.acc.V2$Dim1.viet.acc,coord.viet.acc.V2$Dim2.viet.acc),])
coord.viet.sans.acc.V2 <- data.frame("words"=rownames(res.CA.viet.sans.accent.V2$col$coord))
coord.viet.sans.acc.V2 <- coord.viet.sans.acc.V2 %>% mutate(Dim1.viet.sans.acc = res.CA.viet.sans.accent.V2$col$coord[,1], Dim2.viet.sans.acc=res.CA.viet.sans.accent.V2$col$coord[,2])
coord.viet.sans.acc.V2 <- as.data.frame(coord.viet.sans.acc.V2[order(coord.viet.sans.acc.V2$Dim1.viet.sans.acc,coord.viet.sans.acc.V2$Dim2.viet.sans.acc),])
coord <- cbind(coord.en.V2, coord.viet.acc.V2, coord.viet.sans.acc.V2)
barbesV2 <- read_excel("data/barbesV2.xlsx")
barbesV2 <- barbesV2 %>% mutate(trad_sans_accents = stri_trans_general(Trad, "Latin-ASCII"))
barbesV2$Juge <- as.factor(barbesV2$Juge)
barbesV2$Barbes <- as.factor(barbesV2$Barbes)
barbesV2.viet.acc <- as.data.frame(barbesV2[, -c(3,5)])
barbesV2.viet.sans.acc <- as.data.frame(barbesV2[, -c(3,4)])
barbesV2.en <- as.data.frame(barbesV2[,-c(4,5)])
res.textual.en.V2 <- textual(barbesV2.en,num.text = 3, contingence.by = 2, sep.word = ";")
eff.en.V2 <- as.data.frame(apply(res.textual.en.V2$cont.table, MARGIN = 2, FUN=sum))
words_selection.en.V2 <- res.textual.en.V2$cont.table[,apply(res.textual.en.V2$cont.table, 2, sum)>=1]
res.CA.en.V2 <- CA(words_selection.en.V2, graph=FALSE)
plot.CA(res.CA.en.V2, invisible = "row")
plot.CA(res.CA.en.V2, invisible="col")
res.textual.viet.V2 <- textual(barbesV2.viet.acc,num.text = 3, contingence.by = 2, sep.word = ";")
eff.viet.V2 <- as.data.frame(apply(res.textual.viet.V2$cont.table, MARGIN = 2, FUN=sum))
words_selection.viet.V2 <- res.textual.viet.V2$cont.table[,apply(res.textual.viet.V2$cont.table, 2, sum)>=1]
res.CA.viet.V2 <- CA(words_selection.viet.V2, graph=FALSE)
plot.CA(res.CA.viet.V2, invisible="row")
plot.CA(res.CA.viet.V2, invisible="col")
res.textual.viet.sans.accent.V2 <- textual(barbesV2.viet.sans.acc,num.text = 3, contingence.by = 2, sep.word = ";")
eff.viet.V2 <- as.data.frame(apply(res.textual.viet.sans.accent.V2$cont.table, MARGIN = 2, FUN=sum))
words_selection.viet.sans.accent.V2 <- res.textual.viet.sans.accent.V2$cont.table[,apply(res.textual.viet.sans.accent.V2$cont.table, 2, sum)>=1]
res.CA.viet.sans.accent.V2 <- CA(words_selection.viet.sans.accent.V2, graph=FALSE)
plot.CA(res.CA.viet.sans.accent.V2, invisible = "row")
plot.CA(res.CA.viet.sans.accent.V2, invisible = "col")
coord.en.V2 <- data.frame("words"=rownames(res.CA.en.V2$col$coord))
coord.en.V2 <- coord.en.V2 %>% mutate(Dim1.en=res.CA.en.V2$col$coord[,1], Dim2.en=res.CA.en.V2$col$coord[,2])
coord.en.V2 <- as.data.frame(coord.en.V2[order(coord.en.V2$Dim1.en,coord.en.V2$Dim2.en),])
coord.viet.acc.V2 <- data.frame("words"=rownames(res.CA.viet.V2$col$coord))
coord.viet.acc.V2 <- coord.viet.acc.V2 %>% mutate(Dim1.viet.acc = res.CA.viet.V2$col$coord[,1], Dim2.viet.acc=res.CA.viet.V2$col$coord[,2])
coord.viet.acc.V2 <- as.data.frame(coord.viet.acc.V2[order(coord.viet.acc.V2$Dim1.viet.acc,coord.viet.acc.V2$Dim2.viet.acc),])
coord.viet.sans.acc.V2 <- data.frame("words"=rownames(res.CA.viet.sans.accent.V2$col$coord))
coord.viet.sans.acc.V2 <- coord.viet.sans.acc.V2 %>% mutate(Dim1.viet.sans.acc = res.CA.viet.sans.accent.V2$col$coord[,1], Dim2.viet.sans.acc=res.CA.viet.sans.accent.V2$col$coord[,2])
coord.viet.sans.acc.V2 <- as.data.frame(coord.viet.sans.acc.V2[order(coord.viet.sans.acc.V2$Dim1.viet.sans.acc,coord.viet.sans.acc.V2$Dim2.viet.sans.acc),])
coord <- cbind(coord.en.V2, coord.viet.acc.V2, coord.viet.sans.acc.V2)
View(coord.viet.acc.V2)
View(coord.en.V2)
View(coord.viet.acc.V2)
View(coord.viet.sans.acc.V2)
plot.CA(res.CA.sup10.en, invisible="row")
library(readxl)
library(dplyr)
library(FactoMineR)
library(vietnameseConverter)
library(stringi)
barbes <- read_excel("data/barbes.xlsx")
trad <- read.table("data/traduction.txt", sep="\t", header = TRUE, encoding = "UTF-8")
colnames(trad) <- "trad_avec_accents"
trad <- trad %>% mutate(trad_sans_accents = stri_trans_general(trad_avec_accents, "Latin-ASCII"))
barbes <- cbind(barbes, trad)
barbes$Barbes <- as.factor(barbes$Barbes)
barbes$Juge <- as.factor(barbes$Juge)
summary(barbes)
summary(barbes$Barbes)
# Un B7 au lieu de b7 traîne, correction :
levels(barbes$Barbes) <- c("b1","b2", "b3", "b4","b5","b6","b7","b7","b8")
summary(barbes$Barbes)
barbes.en <- barbes[,-4]
barbes.en <- barbes.en[,-4]
barbes.viet <- barbes[,-3]
res.textual.en <- textual(barbes.en,num.text = 3, sep.word = ";", contingence.by = 2)
eff.en <- as.data.frame(apply(res.textual.en$cont.table, MARGIN = 2, FUN=sum))
# Tout les mots : 627 mots
words_selection.en <- res.textual.en$cont.table[,apply(res.textual.en$cont.table, 2, sum)>=1]
# Sélection des mots qui apparaissent plus de 10 fois : 31
words_selection_sup10.en <- res.textual.en$cont.table[,apply(res.textual.en$cont.table, 2, sum)>=10]
res.CA.en <- CA(words_selection.en, graph=FALSE)
#plot.CA(res.CA.en) -> illisible
res.CA.sup10.en <- CA(words_selection_sup10.en, graph=FALSE)
plot.CA(res.CA.sup10.en, invisible="row")
plot.CA(res.CA.sup10.en, invisible="col")
res.textual.viet <- textual(barbes.viet[,-4],num.text = 3, contingence.by = 2, sep.word = ";")
eff.viet <- as.data.frame(apply(res.textual.viet$cont.table, MARGIN = 2, FUN=sum))
# Tout les mots : 669 mots
words_selection.viet <- res.textual.viet$cont.table[,apply(res.textual.viet$cont.table, 2, sum)>=1]
# Sélection des mots qui apparaissent plus de 10 fois : 29
words_selection_sup10.viet <- res.textual.viet$cont.table[,apply(res.textual.viet$cont.table, 2, sum)>=10]
res.CA.viet <- CA(words_selection.viet, graph=FALSE)
#plot.CA(res.CA.viet) -> illisible
res.CA.sup10.viet <- CA(words_selection_sup10.viet, graph=FALSE)
plot.CA(res.CA.sup10.viet, invisible="row")
plot.CA(res.CA.sup10.viet, invisible="col")
res.textual.viet.sans.accent <- textual(barbes.viet[,-3],num.text = 3, contingence.by = 2, sep.word = ";")
eff.viet <- as.data.frame(apply(res.textual.viet.sans.accent$cont.table, MARGIN = 2, FUN=sum))
# Tout les mots : 669 mots
words_selection.viet.sans.accent <- res.textual.viet.sans.accent$cont.table[,apply(res.textual.viet.sans.accent$cont.table, 2, sum)>=1]
# Sélection des mots qui apparaissent plus de 10 fois : 29
words_selection_sup10.viet.sans.accent <- res.textual.viet.sans.accent$cont.table[,apply(res.textual.viet.sans.accent$cont.table, 2, sum)>=10]
res.CA.viet.sans.accent <- CA(words_selection.viet.sans.accent, graph=FALSE)
# plot.CA(res.CA.viet) -> illisible
res.CA.sup10.viet.sans.accent <- CA(words_selection_sup10.viet.sans.accent, graph=FALSE)
plot.CA(res.CA.sup10.viet.sans.accent, invisible="row")
plot.CA(res.CA.sup10.viet.sans.accent, invisible="col")
res.CA.sup10.en$col$coord
res.CA.viet$col$coord
res.CA.viet.sans.accent$col$coord
barbesV2 <- read_excel("data/barbesV2.xlsx")
barbesV2 <- barbesV2 %>% mutate(trad_sans_accents = stri_trans_general(Trad, "Latin-ASCII"))
barbesV2$Juge <- as.factor(barbesV2$Juge)
barbesV2$Barbes <- as.factor(barbesV2$Barbes)
barbesV2.viet.acc <- as.data.frame(barbesV2[, -c(3,5)])
barbesV2.viet.sans.acc <- as.data.frame(barbesV2[, -c(3,4)])
barbesV2.en <- as.data.frame(barbesV2[,-c(4,5)])
res.textual.en.V2 <- textual(barbesV2.en,num.text = 3, contingence.by = 2, sep.word = ";")
eff.en.V2 <- as.data.frame(apply(res.textual.en.V2$cont.table, MARGIN = 2, FUN=sum))
words_selection.en.V2 <- res.textual.en.V2$cont.table[,apply(res.textual.en.V2$cont.table, 2, sum)>=1]
res.CA.en.V2 <- CA(words_selection.en.V2, graph=FALSE)
plot.CA(res.CA.en.V2, invisible = "row")
plot.CA(res.CA.en.V2, invisible="col")
res.textual.viet.V2 <- textual(barbesV2.viet.acc,num.text = 3, contingence.by = 2, sep.word = ";")
eff.viet.V2 <- as.data.frame(apply(res.textual.viet.V2$cont.table, MARGIN = 2, FUN=sum))
words_selection.viet.V2 <- res.textual.viet.V2$cont.table[,apply(res.textual.viet.V2$cont.table, 2, sum)>=1]
res.CA.viet.V2 <- CA(words_selection.viet.V2, graph=FALSE)
plot.CA(res.CA.viet.V2, invisible="row")
plot.CA(res.CA.viet.V2, invisible="col")
res.textual.viet.sans.accent.V2 <- textual(barbesV2.viet.sans.acc,num.text = 3, contingence.by = 2, sep.word = ";")
eff.viet.V2 <- as.data.frame(apply(res.textual.viet.sans.accent.V2$cont.table, MARGIN = 2, FUN=sum))
words_selection.viet.sans.accent.V2 <- res.textual.viet.sans.accent.V2$cont.table[,apply(res.textual.viet.sans.accent.V2$cont.table, 2, sum)>=1]
res.CA.viet.sans.accent.V2 <- CA(words_selection.viet.sans.accent.V2, graph=FALSE)
plot.CA(res.CA.viet.sans.accent.V2, invisible = "row")
plot.CA(res.CA.viet.sans.accent.V2, invisible = "col")
coord.en.V2 <- data.frame("words"=rownames(res.CA.en.V2$col$coord))
coord.en.V2 <- coord.en.V2 %>% mutate(Dim1.en=res.CA.en.V2$col$coord[,1], Dim2.en=res.CA.en.V2$col$coord[,2])
coord.en.V2 <- as.data.frame(coord.en.V2[order(coord.en.V2$Dim1.en,coord.en.V2$Dim2.en),])
coord.viet.acc.V2 <- data.frame("words"=rownames(res.CA.viet.V2$col$coord))
coord.viet.acc.V2 <- coord.viet.acc.V2 %>% mutate(Dim1.viet.acc = res.CA.viet.V2$col$coord[,1], Dim2.viet.acc=res.CA.viet.V2$col$coord[,2])
coord.viet.acc.V2 <- as.data.frame(coord.viet.acc.V2[order(coord.viet.acc.V2$Dim1.viet.acc,coord.viet.acc.V2$Dim2.viet.acc),])
coord.viet.sans.acc.V2 <- data.frame("words"=rownames(res.CA.viet.sans.accent.V2$col$coord))
coord.viet.sans.acc.V2 <- coord.viet.sans.acc.V2 %>% mutate(Dim1.viet.sans.acc = res.CA.viet.sans.accent.V2$col$coord[,1], Dim2.viet.sans.acc=res.CA.viet.sans.accent.V2$col$coord[,2])
coord.viet.sans.acc.V2 <- as.data.frame(coord.viet.sans.acc.V2[order(coord.viet.sans.acc.V2$Dim1.viet.sans.acc,coord.viet.sans.acc.V2$Dim2.viet.sans.acc),])
coord <- cbind(coord.en.V2, coord.viet.acc.V2, coord.viet.sans.acc.V2)
library(readxl)
library(dplyr)
library(FactoMineR)
library(vietnameseConverter)
library(stringi)
barbes <- read_excel("data/barbes.xlsx")
trad <- read.table("data/traduction.txt", sep="\t", header = TRUE, encoding = "UTF-8")
colnames(trad) <- "trad_avec_accents"
trad <- trad %>% mutate(trad_sans_accents = stri_trans_general(trad_avec_accents, "Latin-ASCII"))
barbes <- cbind(barbes, trad)
barbes$Barbes <- as.factor(barbes$Barbes)
barbes$Juge <- as.factor(barbes$Juge)
summary(barbes)
summary(barbes$Barbes)
# Un B7 au lieu de b7 traîne, correction :
levels(barbes$Barbes) <- c("b1","b2", "b3", "b4","b5","b6","b7","b7","b8")
summary(barbes$Barbes)
barbes.en <- barbes[,-4]
barbes.en <- barbes.en[,-4]
barbes.viet <- barbes[,-3]
res.textual.en <- textual(barbes.en,num.text = 3, sep.word = ";", contingence.by = 2)
eff.en <- as.data.frame(apply(res.textual.en$cont.table, MARGIN = 2, FUN=sum))
# Tout les mots : 627 mots
words_selection.en <- res.textual.en$cont.table[,apply(res.textual.en$cont.table, 2, sum)>=1]
# Sélection des mots qui apparaissent plus de 10 fois : 31
words_selection_sup10.en <- res.textual.en$cont.table[,apply(res.textual.en$cont.table, 2, sum)>=10]
res.CA.en <- CA(words_selection.en, graph=FALSE)
#plot.CA(res.CA.en) -> illisible
res.CA.sup10.en <- CA(words_selection_sup10.en, graph=FALSE)
plot.CA(res.CA.sup10.en, invisible="row")
plot.CA(res.CA.sup10.en, invisible="col")
res.textual.viet <- textual(barbes.viet[,-4],num.text = 3, contingence.by = 2, sep.word = ";")
eff.viet <- as.data.frame(apply(res.textual.viet$cont.table, MARGIN = 2, FUN=sum))
# Tout les mots : 669 mots
words_selection.viet <- res.textual.viet$cont.table[,apply(res.textual.viet$cont.table, 2, sum)>=1]
# Sélection des mots qui apparaissent plus de 10 fois : 29
words_selection_sup10.viet <- res.textual.viet$cont.table[,apply(res.textual.viet$cont.table, 2, sum)>=10]
res.CA.viet <- CA(words_selection.viet, graph=FALSE)
#plot.CA(res.CA.viet) -> illisible
res.CA.sup10.viet <- CA(words_selection_sup10.viet, graph=FALSE)
plot.CA(res.CA.sup10.viet, invisible="row")
plot.CA(res.CA.sup10.viet, invisible="col")
res.textual.viet.sans.accent <- textual(barbes.viet[,-3],num.text = 3, contingence.by = 2, sep.word = ";")
eff.viet <- as.data.frame(apply(res.textual.viet.sans.accent$cont.table, MARGIN = 2, FUN=sum))
# Tout les mots : 669 mots
words_selection.viet.sans.accent <- res.textual.viet.sans.accent$cont.table[,apply(res.textual.viet.sans.accent$cont.table, 2, sum)>=1]
# Sélection des mots qui apparaissent plus de 10 fois : 29
words_selection_sup10.viet.sans.accent <- res.textual.viet.sans.accent$cont.table[,apply(res.textual.viet.sans.accent$cont.table, 2, sum)>=10]
res.CA.viet.sans.accent <- CA(words_selection.viet.sans.accent, graph=FALSE)
# plot.CA(res.CA.viet) -> illisible
res.CA.sup10.viet.sans.accent <- CA(words_selection_sup10.viet.sans.accent, graph=FALSE)
plot.CA(res.CA.sup10.viet.sans.accent, invisible="row")
plot.CA(res.CA.sup10.viet.sans.accent, invisible="col")
res.CA.sup10.en$col$coord
res.CA.viet$col$coord
res.CA.viet.sans.accent$col$coord
barbesV2 <- read_excel("data/barbesV2.xlsx")
barbesV2 <- barbesV2 %>% mutate(trad_sans_accents = stri_trans_general(Trad, "Latin-ASCII"))
barbesV2$Juge <- as.factor(barbesV2$Juge)
barbesV2$Barbes <- as.factor(barbesV2$Barbes)
barbesV2.viet.acc <- as.data.frame(barbesV2[, -c(3,5)])
barbesV2.viet.sans.acc <- as.data.frame(barbesV2[, -c(3,4)])
barbesV2.en <- as.data.frame(barbesV2[,-c(4,5)])
res.textual.en.V2 <- textual(barbesV2.en,num.text = 3, contingence.by = 2, sep.word = ";")
eff.en.V2 <- as.data.frame(apply(res.textual.en.V2$cont.table, MARGIN = 2, FUN=sum))
words_selection.en.V2 <- res.textual.en.V2$cont.table[,apply(res.textual.en.V2$cont.table, 2, sum)>=1]
res.CA.en.V2 <- CA(words_selection.en.V2, graph=FALSE)
plot.CA(res.CA.en.V2, invisible = "row")
plot.CA(res.CA.en.V2, invisible="col")
res.textual.viet.V2 <- textual(barbesV2.viet.acc,num.text = 3, contingence.by = 2, sep.word = ";")
eff.viet.V2 <- as.data.frame(apply(res.textual.viet.V2$cont.table, MARGIN = 2, FUN=sum))
words_selection.viet.V2 <- res.textual.viet.V2$cont.table[,apply(res.textual.viet.V2$cont.table, 2, sum)>=1]
res.CA.viet.V2 <- CA(words_selection.viet.V2, graph=FALSE)
plot.CA(res.CA.viet.V2, invisible="row")
plot.CA(res.CA.viet.V2, invisible="col")
res.textual.viet.sans.accent.V2 <- textual(barbesV2.viet.sans.acc,num.text = 3, contingence.by = 2, sep.word = ";")
eff.viet.V2 <- as.data.frame(apply(res.textual.viet.sans.accent.V2$cont.table, MARGIN = 2, FUN=sum))
words_selection.viet.sans.accent.V2 <- res.textual.viet.sans.accent.V2$cont.table[,apply(res.textual.viet.sans.accent.V2$cont.table, 2, sum)>=1]
res.CA.viet.sans.accent.V2 <- CA(words_selection.viet.sans.accent.V2, graph=FALSE)
plot.CA(res.CA.viet.sans.accent.V2, invisible = "row")
plot.CA(res.CA.viet.sans.accent.V2, invisible = "col")
coord.en.V2 <- data.frame("words"=rownames(res.CA.en.V2$col$coord))
coord.en.V2 <- coord.en.V2 %>% mutate(Dim1.en=res.CA.en.V2$col$coord[,1], Dim2.en=res.CA.en.V2$col$coord[,2])
coord.en.V2 <- as.data.frame(coord.en.V2[order(coord.en.V2$Dim1.en,coord.en.V2$Dim2.en),])
coord.viet.acc.V2 <- data.frame("words"=rownames(res.CA.viet.V2$col$coord))
coord.viet.acc.V2 <- coord.viet.acc.V2 %>% mutate(Dim1.viet.acc = res.CA.viet.V2$col$coord[,1], Dim2.viet.acc=res.CA.viet.V2$col$coord[,2])
coord.viet.acc.V2 <- as.data.frame(coord.viet.acc.V2[order(coord.viet.acc.V2$Dim1.viet.acc,coord.viet.acc.V2$Dim2.viet.acc),])
coord.viet.sans.acc.V2 <- data.frame("words"=rownames(res.CA.viet.sans.accent.V2$col$coord))
coord.viet.sans.acc.V2 <- coord.viet.sans.acc.V2 %>% mutate(Dim1.viet.sans.acc = res.CA.viet.sans.accent.V2$col$coord[,1], Dim2.viet.sans.acc=res.CA.viet.sans.accent.V2$col$coord[,2])
coord.viet.sans.acc.V2 <- as.data.frame(coord.viet.sans.acc.V2[order(coord.viet.sans.acc.V2$Dim1.viet.sans.acc,coord.viet.sans.acc.V2$Dim2.viet.sans.acc),])
coord <- cbind(coord.en.V2, coord.viet.acc.V2, coord.viet.sans.acc.V2)
tissu <- read.csv("data_tissu_orig.csv", header=T, sep=";", dec=",", na.strings = " ")
dico_jar_tissu <-read.csv("dico_jar_tissu.csv",header=TRUE,sep=";",colClasses = "character")
>>>>>>> f91e5f810b244e9eabf47a78050972067d84ee34
